name: Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v3

      - name: Install Node and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Javascript Dependencies
        run: yarn
        env:
          ADBLOCK: true

      - name: Install MacOS Certificate
        if: matrix.os == 'macos-latest'
        run: |
          echo $MACOS_CERT_P12 | base64 --decode > $MACOS_CERT_P12_FILE
          security create-keychain -p $KEY_CHAIN_PASSWORD $KEY_CHAIN
          security default-keychain -s $KEY_CHAIN
          security unlock-keychain -p $KEY_CHAIN_PASSWORD $KEY_CHAIN
          security import $MACOS_CERT_P12_FILE -k $KEY_CHAIN -P $MACOS_CERT_P12_PASSWORD -T /usr/bin/codesign;
          security set-key-partition-list -S apple-tool:,apple: -s -k $KEY_CHAIN_PASSWORD $KEY_CHAIN
          rm "$MACOS_CERT_P12_FILE"
        env:
          KEY_CHAIN: build.keychain
          KEY_CHAIN_PASSWORD: actions
          MACOS_CERT_P12: ${{ secrets.mac_cert }}
          MACOS_CERT_P12_FILE: certificate.p12
          MACOS_CERT_P12_PASSWORD: ${{ secrets.mac_cert_password }}

      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install --yes --no-install-recommends fakeroot dpkg rpm

      - name: Publish MacOS Artifacts
        if: matrix.os == 'macos-latest'
        run: yarn run publish
        env:
          APPLE_ID: ${{ secrets.apple_id }}
          APPLE_ID_PASSWORD: ${{ secrets.apple_id_password }}
          GITHUB_AUTH_TOKEN: ${{ secrets.gh_auth_token }}
          GITHUB_ISSUE_TOKEN: ${{ secrets.gh_issue_token }}
          OSX_IDENTITY: ${{ secrets.osx_identity }}

      - name: Publish Windows Artifacts
        if: matrix.os == 'windows-latest'
        run: yarn run publish
        env:
          GITHUB_AUTH_TOKEN: ${{ secrets.gh_auth_token }}
          GITHUB_ISSUE_TOKEN: ${{ secrets.gh_issue_token }}

      - name: Publish Linux Artifacts
        if: matrix.os == 'ubuntu-latest'
        run: yarn run publish
        env:
          GITHUB_AUTH_TOKEN: ${{ secrets.gh_auth_token }}
          GITHUB_ISSUE_TOKEN: ${{ secrets.gh_issue_token }}
